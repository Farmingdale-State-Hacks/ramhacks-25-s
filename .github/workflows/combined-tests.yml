name: ðŸ”„ Combined Testing

on:
  push:
    branches: [main, master]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  pull_request:
    branches: [main, master]
    paths-ignore:
      - '**.md'
      - 'docs/**'
  workflow_dispatch:

jobs:
  install:
    name: Install Dependencies
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

      - name: Install dependencies
        run: bun install

      - name: Install Playwright browsers
        run: bunx playwright install --with-deps

      - name: Increase file descriptor limit
        run: ulimit -n 65536

      - name: Build application
        run: bun run build

      - name: Save build folder
        uses: actions/upload-artifact@v4
        with:
          name: build-combined
          if-no-files-found: error
          path: .output

  lint:
    name: Lint and Type Check
    runs-on: ubuntu-24.04
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

      - name: Install dependencies
        run: bun install

      - name: Lint
        run: bun run lint

  cypress-test:
    name: Cypress Tests
    runs-on: ubuntu-24.04
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

      - name: Download the build folder
        uses: actions/download-artifact@v5
        with:
          name: build-combined
          path: .output

      - name: Cypress run
        uses: cypress-io/github-action@v6
        with:
          browser: chrome
          start: bun run start
          wait-on: 'http://localhost:3000'
          wait-on-timeout: 120
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload Cypress Screenshots
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-screenshots
          path: cypress/screenshots
          if-no-files-found: ignore

      - name: Upload Cypress Videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: cypress-videos
          path: cypress/videos
          if-no-files-found: ignore

  playwright-test:
    name: Playwright Tests
    runs-on: ubuntu-24.04
    needs: install
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2

      - name: Restore dependencies cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.bun/install/cache
            node_modules
          key: ${{ runner.os }}-bun-${{ hashFiles('**/bun.lockb') }}

      - name: Install Playwright browsers
        run: bunx playwright install --with-deps

      - name: Download the build folder
        uses: actions/download-artifact@v5
        with:
          name: build-combined
          path: .output

      - name: Start server for testing (background)
        run: |
          bun run start &
          echo "Started server with PID $!"
          sleep 10

      - name: Wait for server to be ready
        run: |
          echo "Waiting for server to be available..."
          timeout 120s bash -c 'until curl -s http://localhost:3000 > /dev/null; do sleep 1; done'
          echo "Server is up and running"

      - name: Run Playwright tests
        run: bunx playwright test --skip-server-start
        env:
          PLAYWRIGHT_TIMEOUT: 120000

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30

  report:
    name: Test Report
    if: always()
    needs: [lint, cypress-test, playwright-test]
    runs-on: ubuntu-24.04
    steps:
      - name: Report Status
        run: |
          if [ "${{ needs.lint.result }}" == "failure" ] || \
             [ "${{ needs.cypress-test.result }}" == "failure" ] || \
             [ "${{ needs.playwright-test.result }}" == "failure" ]; then
            echo "Some tests failed!"
            exit 1
          else
            echo "All tests passed!"
          fi
